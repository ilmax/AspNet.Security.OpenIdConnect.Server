@using System.Collections.Generic
@using System.Security.Claims
@using System.Web
@using Owin
@using Owin.Security.OpenIdConnect.Extensions
@using Owin.Security.OpenIdConnect.Server

@{
    Layout = null;

    var context = Context.GetOwinContext();

    var response = context.GetOpenIdConnectResponse();
    if (response != null) {
        <div>@response.Error</div>

        if (!string.IsNullOrEmpty(response.ErrorDescription)) {
            <div>@response.ErrorDescription</div>
        }

        return;
    }

    var request = context.GetOpenIdConnectRequest();
    if (request == null) {
        return;
    }

    var identity = new ClaimsIdentity(OpenIdConnectDefaults.AuthenticationType);

    var claims = new List<Claim> {
        // Note: by default, claims are not added in the identity token.
        // You can override this behavior by adding a new "destination" property
        // indicating in which type of tokens the claims can be included.
        new Claim(ClaimTypes.Name, "Max Muster").WithDestination("id_token token"),
        new Claim("sub", "Max Muster"), new Claim("user_id", "4711"),
        new Claim("Role", "Manager"), new Claim("Company", "ACME")
    };

    if (request.Scope != null) {
        claims.Add(new Claim("scope", string.Join(" ", request.Scope)));
    }

    identity.AddClaims(claims);

    var manager = Request.GetOwinContext().Authentication;
    manager.SignIn(identity);
}